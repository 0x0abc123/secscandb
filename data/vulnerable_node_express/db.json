{"30bfc958200bf9de5a81cf3de614ab8bbfac0f6bdb560e53aa1305e14ed39eb4":"{\"title\": \"generic-api-key\", \"loc\": \"secrets.json:2\", \"severity\": \"note\", \"details\": \"generic-api-key\\ngeneric-api-key has detected secret for file secrets.json at commit 944352f58dbca3ca28f32f87dd9a88e5c434d98f.\\nSnippet:\\nCiFUvmiLReZG3Kq0ofO2zeSLZ4WE6aJSk\", \"timestamp\": 1755053817.3750935, \"tool\": \"gitleaks\"}","88a44878098e1e8b7106bf7367d623fa0842ed3aa9521f1ea6d9e9a7e72d235f":"{\"title\": \"missing-user\", \"loc\": \"Dockerfile:8\", \"severity\": \"error\", \"details\": \"dockerfile.security.missing-user.missing-user\\nBy not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\\nSnippet:\\nCMD [\\\"npm\\\", \\\"run\\\", \\\"start\\\"]\", \"timestamp\": 1755053832.7634578, \"tool\": \"semgrep\"}","4fdf5502e445ce1e2e443342de81656434fbac89f4c6fbd6f9ceda8f1657b9a4":"{\"title\": \"express-check-csurf-middleware-usage\", \"loc\": \"app.js:12\", \"severity\": \"note\", \"details\": \"javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage\\nA CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.\\nSnippet:\\nvar app = express();\", \"timestamp\": 1755053832.7634578, \"tool\": \"semgrep\"}","cc36f0599c8cb4e3f6bc0ef987af6120405eb47e8e8e8a56aee95402c7418820":"{\"title\": \"using-http-server\", \"loc\": \"bin/www:22\", \"severity\": \"warning\", \"details\": \"problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server\\nChecks for any usage of http servers instead of https servers. Encourages the usage of https protocol instead of http, which does not have TLS and is therefore unencrypted. Using http can lead to man-in-the-middle attacks in which the attacker is able to read sensitive information.\\nSnippet:\\nvar server = http.createServer(app);\", \"timestamp\": 1755053832.7634578, \"tool\": \"semgrep\"}","93998d3ffc2bfb13585a9616f15cb8839466db5d63736c2c307119f562ca4033":"{\"title\": \"template-explicit-unescape\", \"loc\": \"views/searchResult.pug:4\", \"severity\": \"warning\", \"details\": \"javascript.express.security.audit.xss.pug.explicit-unescape.template-explicit-unescape\\nDetected an explicit unescape in a Pug template, using either '!=' or '!{...}'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location.\\nSnippet:\\n  h1!= 'Search Results for: ' + searchText\", \"timestamp\": 1755053832.7634578, \"tool\": \"semgrep\"}"}